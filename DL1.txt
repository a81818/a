#Linear regression by using Deep Neural network: Implement Boston housing price prediction
#problem by Linear regression using Deep Neural network. Use Boston House price prediction
#dataset.

import tensorflow as tf
from tensorflow.keras import layers, models
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt

boston_d = tf.keras.datasets.boston_housing
boston = boston_d.load_data()
(x_train, y_train), (x_test, y_test) = tf.keras.datasets.boston_housing.load_data(path='boston_housing.npz', test_split=0.2, seed=42)
scaler = StandardScaler()
x_train = scaler.fit_transform(x_train)
x_test = scaler.transform(x_test)

model = models.Sequential([
    layers.Dense(64, activation='relu', input_shape=(x_train.shape[1],)),
    layers.Dense(1)
])
model.compile(optimizer='adam', loss='mse')

history = model.fit(x_train, y_train, epochs=10, validation_split=0.2, verbose=0)
plt.plot(history.history['loss'], label='Training Loss')
plt.plot(history.history['val_loss'], label='Validation Loss')
plt.xlabel('Epochs')
plt.ylabel('MSE Loss')
plt.legend()
plt.show()

mse = model.evaluate(x_test, y_test, verbose=0)
print("Test MSE:", mse)
